// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Fs               = require("fs");
var Curry            = require("bs-platform/lib/js/curry.js");
var Sinon            = require("wonder-bs-sinon/lib/js/src/sinon.js");
var Sinon$1          = require("sinon");
var Caml_array       = require("bs-platform/lib/js/caml_array.js");
var ArraySystem      = require("../../src/utils/ArraySystem.js");
var Wonder_jest      = require("wonder-bs-jest/lib/js/src/wonder_jest.js");
var ConvertImportCss = require("../../src/converImportCss/convertImportCss.js");

describe("convert import css", (function () {
        var sandbox = Sinon.getSandboxDefaultVal(/* () */0);
        var getConvertedPath = function (index) {
          ConvertImportCss.convert("./lib/js/test", /* Some */[/* array */[
                  "lib",
                  "js"
                ]]);
          return ArraySystem.getFirst(Fs.readFileSync("./lib/js/test/res/testImportFile.js", "utf8").split("\n").map((function (line) {
                              var match = (/^import\s*([\"|\'](.*)[\"|\'])/g).exec(line);
                              if (match !== null) {
                                return Caml_array.caml_array_get(match, index);
                              } else {
                                return "";
                              }
                            })).filter((function (item) {
                            return +(item !== "");
                          })));
        };
        beforeEach((function () {
                sandbox[0] = Sinon$1.sandbox.create();
                return /* () */0;
              }));
        afterEach((function () {
                return Curry._1(Sinon.restoreSandbox, sandbox[0]);
              }));
        Wonder_jest.test("replace the css path with relative path", (function () {
                return Wonder_jest.Expect[/* toEqual */12]("../../../../test/res/css/app.css")(Wonder_jest.Expect[/* expect */0](getConvertedPath(2)));
              }));
        return Wonder_jest.test("repalce \"importCss('xxx')\" with \"import 'xxx'\"", (function () {
                      return Wonder_jest.Expect[/* toEqual */12]("import '../../../../test/res/css/app.css'")(Wonder_jest.Expect[/* expect */0](getConvertedPath(0)));
                    }));
      }));

/*  Not a pure module */
